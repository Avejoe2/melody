dom-module#melody-writer
  template
    template(is="dom-if", if="{{hasIdentity}}")
      form.ui.form.large(action="/posts", method="post")
        input(type="hidden", name="_identity", value$="{{identity.key.public}}")
        .field
          label Content
          textarea(name="content")
        .field.right.floated
          button.ui.right.floated.primary.submit.button(type="submit") Post
            i.icon.right.chevron
  script(src="/js/jquery.min.js", async)
  script.
    Polymer({
      is: 'melody-writer',
      listeners: {
        // TODO: understand why this submit event is seemingly firing on the
        // custom element, when one would expect it to fire on the <form>
        // are events "bubbling" up through the DOM?
        'submit': '_submit'
      },
      properties: {
        state: {
          type: String,
          observer: '_evaluateState',
          notify: true
        },
        identity: {
          type: Object
        },
        hasIdentity: {
          type: Boolean,
          value: false
        }
      },
      _submit: function(e) {
        e.preventDefault();
        
        var self = this;
        var form = self.querySelectorAll('form')[0];
        
        self.unlisten(form, 'submit', '_submit');
        
        self.state = 'loading';
        // TODO: why must this be called manually?
        self._evaluateState();
        $.ajax({
          url: form.action,
          method: 'POST',
          headers: {
            'Accept': 'application/json'
          },
          data: $(form).serialize(),
          // TODO: use the results directly!
          success: function() {
            self.replaceChild(document.createElement('melody-writer'), form);
          }
        });
        return false;
      },
      _evaluateState: function(e) {
        var self = this;
        var form = self.querySelectorAll('form')[0];
        console.log('[MELODY:WRITER]', '_evaluateState');
        self.toggleClass('loading', (self.state === 'loading'), form);
      },
      _loadIdentity: function() {
        var self = this;
        var manager = document.querySelectorAll('maki-identity')[0];
        console.log('[MELODY:WRITER]', '_loadIdentity', 'manager', manager.identity);
        if (manager.identity) {
          self.identity = manager.identity;
          self.hasIdentity = true;
        } else {
          self.identity = null;
          self.hasIdentity = false;
        }
      },
      ready: function() {
        console.log('[MELODY:WRITER]', 'ready');
      },
      attached: function() {
        var self = this;
        var manager = document.querySelector('maki-identity');
        var loader = self._loadIdentity.bind(self);

        document.removeEventListener('datastore:identity:open', loader);
        manager.removeEventListener('datastore:identity:open', loader);

        document.addEventListener('datastore:identity:open', loader, false);
        manager.addEventListener('identity', loader);

        self._loadIdentity();
      }
    });
